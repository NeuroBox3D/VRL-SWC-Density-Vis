apply plugin: 'java'

sourceCompatibility = '1.6'
// warning: [options] bootstrap class path not set in conjunction with -source 1.6 can be ignored
// meaning: we use not the 1.6 JDK but the 1.7 JDK, thus in effect we are cross compiling to Java 1.6
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
	
task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vrl.codetools.Main'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

/// for now we add dependency as jars, but we could also
/// make use of https://github.com/bat-cha/gradle-plugin-git-dependencies
/// which provides a way to add github projects as dependencies 

def loadProperties(String sourceFileName) {
    def config = new Properties()
    def propFile = new File(projectDir,sourceFileName)
    
    if (propFile.isFile()) {
        config.load(new FileInputStream(propFile))
        for (Map.Entry property in config) {
            ext.set(property.key, property.value)
        }
    }
}

// loads the property file
loadProperties('build.properties')

// add dependencies
dependencies {
    /// testing dependencies (from maven)
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'org.easymock', name: 'easymock', version: '2.5.2'
    testCompile group: 'org.eluder.coveralls', name:'coveralls-maven-plugin', version: '1.2.0'
    
    /// local dependencies from ug and plugins and vrl 
    compile (group: 'eu.mihosoft.vrl', name: 'vrl', version: '0.4.2.8.5-SNAPSHOT')
    compile fileTree(dir: vrldir+"/plugins/", includes:['*.jar'])
    
    /// project lombok and levy's kd tree implementation
    compile fileTree(dir: "jars/", includes:['*jar']);
}

// compiles and installs the vrl plugin to the specified folder
task installVRLPlugin(dependsOn: [clean,jar]) << {
    println(">> copying vrl plugin to: " + vrldir+"/plugin-updates")
    copy {
        from buildDir.getPath()+"/libs/"+rootProject.name + ".jar"
        into vrldir+"/plugin-updates"
        include '**/*.jar'
    }
}
